worker_processes 1;

events {
    worker_connections 1024;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Gzip Settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # Upstream for the FastAPI application
    upstream backend {
        server api:8000; # 'api' is the service name in docker-compose.yml
    }

    server {
        listen 80;
        server_name localhost; # Adjust if you have a domain

        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support (if your API uses WebSockets)
            # proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection "upgrade";
        }

        # Optional: Location for serving static files directly via Nginx
        # if you have a shared volume for static assets.
        # location /static/ {
        #     alias /usr/share/nginx/html/static/; # Example path
        #     expires 1d;
        #     access_log off;
        # }

        # Optional: Location for serving user uploads directly via Nginx
        # (ensure this path matches a shared volume if used)
        # location /uploads/ {
        #     alias /usr/share/nginx/html/uploads/; # Example path
        #     # Add any access control or security headers needed
        #     expires 7d;
        # }

        # Deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        location ~ /\.ht {
            deny all;
        }
    }

    # HTTPS server (Uncomment and configure if you have SSL certs)
    # server {
    #     listen 443 ssl http2;
    #     server_name your_domain.com; # Replace with your domain

    #     ssl_certificate /etc/nginx/ssl/your_domain.com.crt; # Path to your cert
    #     ssl_certificate_key /etc/nginx/ssl/your_domain.com.key; # Path to your key
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #     ssl_prefer_server_ciphers on;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;

    #     location / {
    #         proxy_pass http://backend;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }
}

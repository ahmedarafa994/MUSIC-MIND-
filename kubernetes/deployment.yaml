apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-music-mastering-api
  labels:
    app: ai-music-mastering
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-music-mastering
      component: api
  template:
    metadata:
      labels:
        app: ai-music-mastering
        component: api
    spec:
      containers:
      - name: api
        image: ai-music-mastering:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: url
        - name: REDIS_URL
          value: "redis://redis-service:6379/0"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  selector:
    app: ai-music-mastering
    component: api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: music-gen-service
  labels:
    app: ai-music-mastering
    component: music-gen
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-music-mastering
      component: music-gen
  template:
    metadata:
      labels:
        app: ai-music-mastering
        component: music-gen
    spec:
      containers:
      - name: music-gen
        image: music-gen-service:latest
        ports:
        - containerPort: 8000
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
            nvidia.com/gpu: 1
          limits:
            memory: "4Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
        volumeMounts:
        - name: model-cache
          mountPath: /app/models
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: model-cache-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: music-gen-service
spec:
  selector:
    app: ai-music-mastering
    component: music-gen
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-music-mastering-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
spec:
  tls:
  - hosts:
    - api.musicmastering.ai
    secretName: api-tls
  rules:
  - host: api.musicmastering.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-service
            port:
              number: 80